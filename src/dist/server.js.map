{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.ts","webpack:///./src/routes/belight.router.ts","webpack:///./src/server.ts","webpack:///external \"body-parser\"","webpack:///external \"dotenv/config\"","webpack:///external \"express\"","webpack:///external \"path\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;AClFA,8DAAmC;AACnC,qDAA6B;AAC7B,yEAA0C;AAC1C,8GAAiD;AAEjD,MAAM,GAAG;IAGP;QADO,aAAQ,GAAW,IAAI,uBAAM,EAAE,CAAC;QAErC,kBAAkB;QAClB,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAE/B,kCAAkC;QAClC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QAEnC,qBAAqB;QACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAEzD,oCAAoC;QACpC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IACzC,CAAC;CACF;AAED,kBAAe,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC;;;;;;;;;;;;;;;;ACxB7B,MAAa,MAAM;IACV,MAAM,CAAC,GAAG;QACf,uBAAuB;QACvB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;YACjD,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;gBAClB,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,gDAAgD;aAC1D,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAVD,wBAUC;;;;;;;;;;;;;;;ACZD,0DAAuB;AACvB,+DAAwB;AAExB,yBAAyB;AACzB,MAAM,IAAI,GAAQ,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,IAAI,CAAC;AAElD,kBAAkB;AAClB,aAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACpB,OAAO,CAAC,GAAG,CAAC,oCAAoC,IAAI,EAAE,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC;;;;;;;;;;;;ACTH,wC;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,iC","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server.ts\");\n","import * as express from \"express\";\r\nimport * as path from \"path\";\r\nimport * as bodyParser from \"body-parser\";\r\nimport { Routes } from \"./routes/belight.router\";\r\n\r\nclass App {\r\n  public app: express.Application;\r\n  public routePrv: Routes = new Routes();\r\n  constructor() {\r\n    /* app settings */\r\n    this.app = express();\r\n    this.routePrv.routes(this.app);\r\n\r\n    /* set view folders, pug engine */\r\n    this.app.set(\"views\", path.join(__dirname, \"views\"));\r\n    this.app.set(\"view engine\", \"pug\");\r\n\r\n    /* use body-parser */\r\n    this.app.use(bodyParser.json());\r\n    this.app.use(bodyParser.urlencoded({ extended: false }));\r\n\r\n    /* setting  default static folder */\r\n    this.app.use(express.static(\"public\"));\r\n  }\r\n}\r\n\r\nexport default new App().app;\r\n","import { Request, Response } from \"express\";\r\n\r\nexport class Routes {\r\n  public routes(app): void {\r\n    /* index.pug routing */\r\n    app.route(\"/\").get((req: Request, res: Response) => {\r\n      res.render(\"index\", {\r\n        title: \"BeLight\",\r\n        message: \"Express.js + Pug + Webpack + Typescript + SaSS\"\r\n      });\r\n    });\r\n  }\r\n}\r\n","import \"dotenv/config\";\r\nimport app from \"./app\";\r\n\r\n/* Setting Server Port */\r\nconst PORT: any = process.env.SERVER_PORT || 3000;\r\n\r\n/* Server Start */\r\napp.listen(PORT, () => {\r\n  console.log(`Express Server Listening on Port ${PORT}`);\r\n});\r\n","module.exports = require(\"body-parser\");","module.exports = require(\"dotenv/config\");","module.exports = require(\"express\");","module.exports = require(\"path\");"],"sourceRoot":""}